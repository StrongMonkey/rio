// Code generated by go-bindata.
// sources:
// stacks/cert-manager-stack.yaml
// stacks/coredns-stack.yaml
// stacks/istio-crd-stack.yaml
// stacks/istio-stack.yaml
// stacks/istio-telemetry-stack.yaml
// stacks/localstorage-stack.yaml
// stacks/nfs-stack.yaml
// DO NOT EDIT!

package stacks

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _stacksCertManagerStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x6b\xdb\x40\x10\xc5\xef\xfa\x14\x83\x5b\x08\x04\xd6\x21\xb7\xa2\x9b\x31\x26\xe4\x90\x36\x84\xde\xc5\x7a\xf5\xac\x2c\xd9\x3f\xea\xcc\xac\x5b\x53\xfa\xdd\x8b\x25\x39\x56\x69\xc0\x3e\xee\x9b\xdf\xcc\xee\x9b\xb7\x02\xde\x7b\x07\xa9\x2b\x22\x07\x56\x13\x6d\xb2\x1d\xf8\x78\x26\xea\x42\xde\xda\xd0\xf4\xe0\xe8\x45\x7c\x4e\x32\xea\x86\x6e\x6e\x07\x7c\xa2\x97\x6f\x5f\x64\xe9\xf3\xdd\xed\xcd\xb9\x8c\x5f\x8a\x34\xf4\xdc\xf9\xd4\x31\x44\x20\xb3\xb2\xcb\x69\xe7\xbb\x68\xfb\xb9\x28\x70\x0c\x9d\x2b\xd8\x23\xe9\xbf\xc8\xf8\xe0\x99\xd4\xe7\x76\x3a\xfa\x68\x3b\xd4\xf4\xf9\xf7\x7a\xf3\xf2\xbd\x79\x5a\x7d\x5d\x3d\x6c\x5e\x9a\xc7\xa7\xd5\xc3\xe6\xcf\x19\x78\x2e\x21\x3c\xe7\xe0\xdd\xa1\xa6\x55\xf8\x69\x0f\x32\xd4\x5c\x8e\xd1\xa6\xf6\xe4\x70\xbe\x8d\x49\x32\x26\xc0\xb6\x60\x83\x00\xa7\x3e\x27\x93\x6c\x84\xf4\xd6\x61\x22\xd8\x67\x23\x07\x51\xc4\xf7\x16\x17\x8a\x28\xd8\x30\x24\x17\x76\xb8\xa6\x27\xe4\x4e\xb3\x68\x0b\x3e\x5d\xbd\x50\x2e\x58\x54\xd5\x5b\xd9\x82\x13\x74\x4c\xec\x7d\x54\xdb\xb8\x22\x9a\x63\x73\xba\xa5\x69\xb1\xf3\xc9\xeb\x29\xb3\x4f\x83\x1f\x3a\xfb\x31\xf4\x28\x52\xc0\xcb\x0f\x62\xdc\xdf\xdb\xd0\xbf\xda\xfb\x01\x5b\xbf\xda\x10\x90\x3a\x5c\x24\xbf\x71\x7b\xcd\x3c\xb0\xfa\x9d\x77\x56\x2f\x4d\xbc\x60\xc9\xd0\x7a\x5c\xed\x15\x46\xaa\x1f\x05\x32\x75\x1a\xda\x5b\xf6\x76\x1b\x50\xd3\xff\xff\xa4\x22\x6a\x21\x8e\x7d\x7f\xc4\x6b\x5a\xcc\xf7\x36\xfe\x1f\xd2\x4c\x45\x8e\x69\xfc\x0d\x00\x00\xff\xff\x22\x78\xed\xc4\x3e\x03\x00\x00")

func stacksCertManagerStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksCertManagerStackYaml,
		"stacks/cert-manager-stack.yaml",
	)
}

func stacksCertManagerStackYaml() (*asset, error) {
	bytes, err := stacksCertManagerStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/cert-manager-stack.yaml", size: 830, mode: os.FileMode(436), modTime: time.Unix(1545249779, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksCorednsStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x52\xcd\x6e\xdb\x3c\x10\xbc\xfb\x29\xf6\x01\x2c\x4a\x82\x3e\x7f\x75\x79\x6c\xea\x43\x2e\x39\xb4\x45\xaf\x06\x43\xae\x2d\xc2\xfc\xc3\x2e\x95\xc6\x68\xfb\xee\x05\x4d\xcb\x50\xe3\x46\x17\x2d\x77\x86\xcb\xc5\xcc\xe8\x18\x0e\xf6\xc8\x72\x05\x50\xca\xf2\xbf\x54\x19\x43\x96\xf0\xab\xb9\x9c\x01\x84\xdc\x0c\xf0\xf3\x7a\x28\x1f\x12\x45\xe2\x45\x63\x44\xe5\xf2\xb8\x68\x9c\xa6\x67\xa4\x80\x19\x19\xb4\x9b\x38\x23\x09\x17\xb5\x72\x60\x43\xa3\x8c\x21\xa1\x28\x29\xb0\xe9\xff\x5a\x2c\x87\x97\x2f\x45\xc3\x60\x03\xa3\x9e\x08\xdf\x60\x53\xe2\x4c\xa8\xfc\x9b\xf6\x41\x39\x97\x47\x8a\xd3\x71\xfc\xf7\x23\x0b\xfe\xef\x45\x9d\x28\x7a\xcc\x23\x4e\x0c\xf2\x63\xbf\x19\xfe\x86\x5e\xcf\x20\xa0\xc5\xac\x5b\x42\x8e\xee\x45\x14\x9d\x16\x14\xad\xf4\x88\x30\x74\xab\x79\x30\x23\xbd\x58\x8d\x57\x4d\x09\x4d\xe0\x2a\x6b\x29\x60\x8c\x9c\xab\xc8\x2a\xed\x95\x31\x12\x9e\x76\xdf\xf6\x9f\x1e\x9f\x3e\xef\xbf\xee\xbe\x7c\x7f\x7c\xd8\xdd\x50\x43\x31\x49\x50\xce\x5d\x4d\xf1\x5e\x05\x53\x47\x35\xd0\xdc\xd6\x68\xea\x76\xd7\xa7\xda\x87\x48\x78\xb0\x0e\x67\x27\x67\x7b\x0b\xf1\x62\xf1\xfb\x6c\x7c\x4d\x91\x71\x26\xf7\x9d\xf8\x6f\x10\x9d\xe8\x3b\xb9\x19\xe4\x66\x68\x27\x93\xd6\x26\xf0\x3b\x70\x81\x9a\xac\xd3\x15\x2e\x42\xae\x3d\x66\xb2\xba\xde\x38\xba\xf8\xac\xdc\x3e\x21\x79\xcb\x6c\x63\xb8\x6d\xe5\x2c\xe7\xf5\x0f\x95\xf5\x08\x18\x4c\x8a\x36\x64\xbe\x87\x66\x59\xef\x91\x12\x95\xfb\x6e\x50\x1e\x39\xa9\xf9\x46\xcd\xa7\x1e\x51\x9f\x24\x8c\x39\x27\xd9\xb6\x97\x3c\x16\x43\xe4\xb6\xdb\x76\xed\x22\xc2\xd6\xab\x23\x4a\x38\x6d\x59\x1c\x35\x09\x1b\x67\xc1\x64\x2f\x7a\x51\x13\xe2\xd1\x47\x3a\x4b\xf8\xd0\xd5\x20\x12\x2a\xb3\x8f\xc1\x9d\x25\x64\x9a\xaa\xa2\xac\x95\x43\x09\xfd\xea\x4f\x00\x00\x00\xff\xff\xd5\x57\x8c\x0c\x68\x03\x00\x00")

func stacksCorednsStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksCorednsStackYaml,
		"stacks/coredns-stack.yaml",
	)
}

func stacksCorednsStackYaml() (*asset, error) {
	bytes, err := stacksCorednsStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/coredns-stack.yaml", size: 872, mode: os.FileMode(436), modTime: time.Unix(1545249779, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioCrdStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\x41\x4b\xc3\x40\x10\x05\xe0\x7b\x7e\xc5\x42\xce\x46\xaa\x37\x6f\x8a\x45\xbd\xc5\xb6\x78\x0d\xe3\xe6\x35\x1d\x9a\xce\x84\xdd\xd9\x96\xfe\x7b\x71\x5b\x14\x2d\x24\x3d\xbf\xef\x0d\xcb\xdb\x6d\xfa\x44\x10\x18\xe2\x43\xe1\x9c\xd0\x0e\x71\x20\x8f\xb6\xf1\x29\x9a\xee\x9a\x80\xa8\x29\x78\x34\x2d\xd6\x2c\x6c\xac\x92\x65\xe9\xbc\xca\x9a\xbb\xc2\xb9\x1b\xf7\x8c\x68\x2c\xf4\x1d\xd6\xda\xb3\x3f\x56\xa7\xb0\xe2\x68\xac\x15\xeb\xed\x7e\x46\xfd\xb0\xa1\xbb\xcc\xe7\x5d\x40\x8c\x8b\xd4\x63\xdc\x2d\x34\x19\xa6\xd9\xeb\x6a\x55\x3f\xd6\x6f\xcb\x01\xfe\x89\xa5\x65\xe9\xae\xf6\xe3\xf0\x3d\xa9\xd1\xd5\x67\x7f\xf4\x18\x2b\x9d\xc0\x0e\x1a\xb6\x2c\xa7\xe9\x3e\x38\x58\xa2\x7e\x89\xb0\x67\x8f\xea\x37\xbd\xa8\xdf\xff\x9f\x3a\x2f\x33\x59\x38\x5f\x9e\x8b\x85\xe3\xb4\x7e\x21\xc3\x81\x26\x61\xe9\x28\xd9\x06\x62\xec\xf3\x53\x72\xf7\xfc\xf5\x7f\x93\x8b\xfa\xac\xf8\x0a\x00\x00\xff\xff\xbd\xa2\x21\x22\x73\x02\x00\x00")

func stacksIstioCrdStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioCrdStackYaml,
		"stacks/istio-crd-stack.yaml",
	)
}

func stacksIstioCrdStackYaml() (*asset, error) {
	bytes, err := stacksIstioCrdStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-crd-stack.yaml", size: 627, mode: os.FileMode(436), modTime: time.Unix(1545249779, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5d\x6f\xdb\x36\x17\xbe\xf7\xaf\x20\xf4\x06\xc8\xdb\x22\xb4\x9d\xb6\xd9\x1a\x01\xbe\x30\x1c\x17\x0d\x90\xc4\x5e\xec\x62\xe8\x95\x41\x93\xc7\x36\x11\x8a\xd4\x48\xca\x89\xd7\xf5\xbf\x0f\xa4\x28\x8b\x4a\xe4\x3a\xdb\x30\xec\x26\xb1\x78\x9e\x73\x74\x3e\x1f\x1e\x51\x25\x57\x7c\x6d\xd2\x0e\x42\x19\x98\x8d\xfb\x8f\x10\x55\xd2\x82\xb4\x29\xfa\x03\xfb\x67\x84\x18\x37\x64\x29\x60\xaa\x04\xa7\xbb\xd1\x06\xe8\x83\x49\x91\xd5\x05\x04\x39\x97\x6b\x0d\xc6\x8c\x94\xb4\x5a\x09\x01\xfa\x56\x31\x48\x51\x32\xf9\xf4\x29\x09\x10\x52\xd8\x4d\xa9\x9f\xa2\xbb\xc9\xdd\x38\x1c\x6b\x66\xee\x61\xa5\xc1\x6c\xae\x40\x90\x5d\x8a\xce\xfb\x26\x88\x32\xfe\x04\xfa\x1e\x72\xa5\xed\x0c\xf4\x16\x74\x8a\xb8\xb1\x5c\x61\x0b\x02\x32\xb0\x7a\xd7\x3d\xf9\x36\x1f\xdf\x8c\x6f\xc7\xf3\xfb\xaf\x8b\xbb\xe1\xed\x78\x36\x1d\x8e\xc6\xdf\xbb\x66\x4b\xbb\x54\x14\xc6\x82\xee\x0a\x45\x89\x48\x2f\xfb\x97\xe7\xc1\xac\x2a\xec\x52\x15\x92\xcd\x35\x59\xad\x38\x0d\x3e\x05\x21\x42\x99\xf7\x7c\x78\x73\x33\xf9\x75\x31\xbc\xfb\x5a\x25\x00\x56\xa4\x10\x76\xe4\xd3\x55\x83\x19\x37\x54\x6d\x41\xef\x0e\xc5\xe0\x93\x29\x81\xda\x39\xcf\x40\x15\x36\x45\xef\x9b\xb2\x15\x5f\x4f\x89\xdd\xa4\x28\xe9\x81\xa5\x3d\x1f\x60\x2f\xd7\xea\x69\x97\xec\x61\x4b\x2e\x89\xde\x55\xb0\xc2\xe8\x9e\x0f\xaa\xb7\xe4\xb2\x07\x72\xab\x22\xa8\x01\xbd\xe5\x14\x46\x65\xf0\x55\xc2\xbc\xbd\xda\x69\x4d\xb8\xbc\x2a\x34\xb1\x5c\xc9\x14\x7d\xb8\xa8\x1d\xca\x89\x06\x69\x67\x9b\xc2\x32\xf5\x18\x61\xce\xb3\xc8\x6b\x2e\x2d\x68\x0a\xb9\x13\x95\x75\xbe\x1f\x5f\x5d\xdf\x8f\x47\xf3\xda\x8e\x7b\xe1\x90\x65\x5c\x4e\x95\xb6\x29\x3a\xbf\xe8\xf7\xfb\x71\xd8\xae\x4d\xa6\x82\x48\x18\xb6\xb7\x45\x94\xda\x21\x63\xae\xb7\xf6\xb1\x70\xa1\x6c\xf7\xe4\x5b\x5d\xee\xd4\x59\xff\xb9\xd3\x09\xb1\xfb\x66\x8e\xb0\x65\xb5\x04\x59\x82\x30\x55\xe5\xbc\x38\x45\x5e\xee\x8f\xd6\x42\x2d\x89\x58\xe4\xa0\x33\x6e\x0c\x57\x32\x40\x31\x3a\x7d\x1b\xca\xd4\xf5\x4a\x5d\xae\x7a\x6f\x4f\x6b\x99\x04\xfb\xa8\xf4\x03\x97\x07\xe4\xae\xed\x41\x5a\x4e\x7d\x26\x0f\x60\x72\x0e\x4f\x16\xa4\x7f\x6f\xf7\xe1\xa3\x71\x00\x5a\x18\xab\x32\x0d\x46\x15\x9a\x02\x83\x15\x97\xdc\x99\x30\x91\x62\xad\xd5\xb3\x1b\xae\x59\x4e\xb4\xdd\x55\x2a\xaf\x07\x76\x6b\x71\xbb\x4e\x18\xef\x43\x26\xf7\xe2\x9e\xb1\xc4\x16\x7b\x94\x5e\x12\x1a\x45\x1c\x4e\xa9\x06\x62\xe1\x6c\x0d\xf6\x4c\x70\x63\xcf\x1e\x89\xa5\x9b\xb3\x22\x67\xc4\x42\x48\x75\x46\x72\x13\xd0\x20\x59\xae\xb8\xb4\xd5\x73\xae\x58\xf5\xb3\xaa\x77\x78\x94\x24\x03\x93\x93\xe8\x40\x31\xa8\xb1\x54\x43\x30\x62\x38\x83\x07\xee\x28\xac\xf3\xac\xd5\xd2\xa8\x45\xb3\x8c\x48\x96\xd6\x32\x84\xb1\x50\xeb\x85\x2a\x6c\x5e\xd8\x85\x80\x2d\x88\x01\x83\x65\xb1\x46\x18\x6b\x30\x3b\x49\x07\xef\x36\xcf\x26\xdb\xd4\x06\x71\xc9\xaf\xd1\x90\x97\x90\x9e\x3b\xde\xa3\x40\x6e\xb9\x56\x32\x73\xec\x1b\xa9\x4e\x27\x57\x9e\xde\x06\x27\xff\x37\x20\x56\x3d\x17\xea\x9b\x16\xb9\x9f\x87\x18\xe4\xf3\xd1\x40\x5e\xdf\x4c\xe6\x8b\xf9\xe7\xfb\xc9\x7c\x7e\x33\x1e\x5c\x44\x53\x59\x09\x47\xc3\xd1\xe7\xf1\x62\xf6\xcb\x97\xe1\xec\xf3\xe0\xa2\x9e\xfa\x8c\xac\x21\x0c\x61\xaf\x1c\xac\xf3\x6e\xbf\xfb\x21\xa2\x1e\x9f\xe2\x14\x71\xe6\x1a\xde\xee\xca\x60\x29\x68\x6b\xe2\xb1\x2b\xd9\xa8\x0e\x0f\x9e\x72\x65\x20\x0e\xd7\xcf\x73\x6f\x63\x6d\xde\x3c\x3c\xef\xf7\xd6\x3a\xa7\xd1\xe1\x65\xff\xf2\xbd\x07\x9e\xb9\x3f\x38\x53\x92\x5b\xa5\xb9\x5c\x1f\x70\xdb\xbd\x79\xfb\xee\x99\xe3\x55\xad\x23\xbb\x4d\xc2\xc4\x08\xe3\x26\xb1\x46\xa2\x88\x69\x1a\x0a\x16\xb2\x5c\x10\x0b\x9f\xb8\x80\x48\xf0\x9c\xe5\x4b\x02\x5f\x94\xac\xb6\x23\x99\xe8\xda\x2c\x17\x0d\x4b\xed\x74\x19\x41\x1a\xbc\xf9\xaf\xb7\xd0\xf5\xdd\x6c\x3e\xbc\x1b\x8d\x17\xd7\xd3\x0a\xc7\xf3\x37\xaf\x6b\x83\x3d\x33\x53\x6e\x09\x03\x51\x7a\x18\x6a\x94\x84\xb9\x08\x22\x5f\xa4\xa4\xf3\xa2\x42\x2e\x25\x24\xcf\x41\x32\xcc\xa4\xc1\xde\xc7\xc1\x7e\x17\x71\x52\xd7\x24\xd8\xad\x0d\x83\x8f\xfd\x9f\xfa\xcd\xe3\x8d\x32\xd6\xa9\x0c\xc2\x6b\x3a\x75\x81\xc5\x0a\x1b\xbe\x96\xc0\x30\x25\x4d\x83\x01\x8b\x8d\x55\x9a\xac\x01\xef\xf3\x32\xd0\x5c\x61\xb3\x33\x16\xb2\x23\xd7\xc8\xa3\xe6\x16\x1a\x34\xb4\x27\x30\x42\xa9\x2a\xe4\xf3\xd3\xf2\xb1\xc5\x92\x23\x4e\x06\x02\x2c\x20\x06\xb9\x50\x3b\x57\x6a\xf3\x52\xd8\x6e\xfd\x25\xa0\x45\xd2\x6e\xd7\xb3\x75\xc9\xd3\x15\x30\xba\x04\xfe\x8e\x8e\x86\x5c\x70\x4a\xcc\x9e\x99\x5f\xd5\x3b\x6b\x62\xe1\x91\xec\xda\xee\xf5\x24\xc8\x92\x14\x25\xee\x3d\x5a\x12\x91\x1c\xa9\x4c\xe2\xfc\x2c\x2f\xa1\xc8\xdb\x23\x57\x66\xf2\x63\xe5\xb7\xbd\x2d\xd7\xb6\x20\xa2\xca\xf1\x51\x3c\x03\x63\xb9\xf4\x4b\x82\x2e\xc4\x2b\x14\x42\xa4\x01\x58\x1e\x2f\x94\x66\x6e\xeb\x33\x56\xe5\x78\xc5\xb5\xb1\xed\x17\x5e\x2b\x0f\xbb\x81\x31\x29\x3a\xf9\x36\x9d\xdc\xcf\x67\xdf\x9f\x33\x68\xd2\x42\xa1\xc9\x5f\xe1\x50\xad\x8a\x26\x73\xe2\x6d\xf4\x90\xbc\x4b\x1a\xa4\xd7\xba\x59\x47\x88\xd3\x73\x73\x8a\xfe\x77\x0c\x85\x71\x63\xd9\x8d\xf5\x3f\x5c\x78\x03\x07\xc4\x18\xb7\xaf\xc2\x0d\x0f\xb2\xbe\x33\x71\x14\xe8\x19\x3c\xfa\x06\x68\xd8\xf0\x26\x0e\xca\x8f\xdf\x3b\x2f\x2e\xaa\xdf\x79\xfe\xc0\x65\x58\x9a\xe3\x04\x37\xf3\xeb\x36\x35\xc3\xbe\xb0\xfc\x28\xb2\xb9\xcb\xc7\x38\xbf\xd5\x27\xff\xe0\xae\x6a\x14\xfa\xa5\x23\xf1\x12\x5f\xee\xf8\x95\x0c\xe4\xf6\x3f\xb9\xdc\x30\xba\x9e\xcd\xaf\x27\x8b\xdb\xf1\x7c\xb8\xf8\xf1\x5b\x2b\x2e\x8b\xe3\x39\xb8\x18\xf9\xf9\x70\xd7\xa2\x3b\x8b\x97\xc4\xb0\x5a\x87\x61\xc7\x81\x09\x3b\xbf\x15\x8e\x2e\x3c\x89\x61\xb4\x25\x9a\xbb\xaf\xf3\x14\xb5\x7c\x0c\x77\xdc\xb7\xab\xa1\x9a\xe7\xe5\x97\x5c\xf2\xec\x13\xba\x5e\x9b\x93\x4e\xa7\xf3\x67\x00\x00\x00\xff\xff\xe1\x56\x99\xce\x0f\x10\x00\x00")

func stacksIstioStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioStackYaml,
		"stacks/istio-stack.yaml",
	)
}

func stacksIstioStackYaml() (*asset, error) {
	bytes, err := stacksIstioStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-stack.yaml", size: 4111, mode: os.FileMode(436), modTime: time.Unix(1545249779, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioTelemetryStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3d\xfd\x73\xdb\x36\x96\xbf\xfb\xaf\xc0\x28\x99\xb1\xbd\xb5\x3e\xec\xa6\xbb\x1b\x65\x3c\x1d\x25\x76\x5a\xdf\xb6\xb6\xc7\x76\xee\xe6\xae\x97\xe5\x40\xe4\x93\x84\x9a\x04\xb8\x00\x28\x5b\x5d\xef\xfd\xed\x37\xf8\x20\x09\x7e\x8a\x92\x93\x66\xdb\xaa\xbb\x93\x28\xc4\x7b\x0f\x0f\x0f\xef\x0b\x0f\x20\xe8\x33\x3a\x23\x73\x31\xde\x43\x28\xe6\x2c\x02\xb9\x80\x44\xf4\xcd\x53\xf5\x10\x21\x9f\x51\x09\x54\x8e\x11\x7a\xea\xeb\x07\x08\xcd\x43\x36\xc5\xe1\xd8\xfe\x0b\x21\xe1\x73\x1c\x83\x47\xa8\x04\xbe\xc4\xe1\x18\x1d\x7f\x23\xf6\x0a\x4d\x59\x37\xf6\x71\x1f\xfd\xcc\xa6\x1e\xc5\x11\x8c\xd1\x3e\x11\x92\xb0\x7e\x04\x62\xb1\x9f\x91\x7c\x81\xae\x96\xc0\x39\x09\x00\xc9\x05\xd8\x1e\x51\x00\x33\x9c\x84\x12\x61\x1a\x58\xca\x48\x62\x3e\x07\x29\xd0\x8c\xb3\x08\xc9\x05\x11\x8a\x32\x82\x25\xf0\x15\xfa\x06\x09\xf0\x19\x0d\xc4\xa0\x99\xd5\x6f\xc4\x5e\xd6\x78\x9f\x4c\x81\x53\x90\x20\x3c\x11\x78\x8e\x68\x52\xa6\x39\x0b\x61\x8c\x80\x06\x31\x23\x54\x8a\xac\x05\x21\x35\x14\x11\x63\x1f\x1c\xf8\xec\x79\xf1\x51\x1f\xbd\xfc\xe7\xe5\xe4\xc7\xf3\xdb\xeb\xc9\xbb\xf3\x7f\xe5\xbd\x73\x08\xf1\x14\xc2\xba\x7e\x05\x4b\xb8\x0f\x9e\x6e\x17\x63\xf4\x93\xe7\x45\x20\xb1\xe7\xf2\x0b\x7c\x49\x7c\xd0\x22\x3d\x42\xd5\xf6\x94\x67\x2f\x66\x5c\x6a\xa8\x8f\x0e\x53\xd8\x97\x84\xd1\x31\xba\x07\x88\x9d\xc7\x1c\xe6\xf0\x38\x46\x66\x7e\x24\x84\x10\x81\xe4\xab\x37\xb9\xa2\xec\xa5\xdc\xbf\x40\xb7\x66\x3a\x0c\xf3\x68\xc6\x38\x02\xba\x64\x2b\x24\x24\xce\x04\x55\x98\x75\xdd\xdc\xd7\xcd\xf9\xb4\xab\x0e\x88\x2f\xbc\x18\xcb\xc5\x18\x0d\x75\xeb\xd0\xe9\x6f\xc3\x99\x8a\x59\xf0\x89\xe4\x1b\x33\xdd\x8d\xc4\x84\x02\xdf\x46\x88\xfb\x83\x3f\xf5\xcd\x90\xd5\x70\xf6\x5b\x3b\xc7\x41\xc0\x41\x08\xcf\xab\x9b\x49\xc5\x09\xa6\x94\x49\xac\xba\xf3\x72\xe1\x78\x84\x69\xc6\xea\x78\xe2\x10\x87\xd8\x87\x2a\x5b\x07\x3f\xfd\x7d\xfc\xf1\xab\xc3\x83\x6f\xc7\xe3\xff\x0d\xbe\x3a\xfc\xf6\xcd\x81\xfa\xab\x00\xa7\x31\x23\xed\x02\x5e\x1e\x8f\x8f\xbf\x19\xbd\x1e\x39\xed\xc6\xfe\x0c\xf7\x63\xe4\xf0\xee\x8c\x30\xe5\x42\x03\x45\xb8\x46\x3a\xf5\xc3\x34\xf3\x75\x30\x70\x18\xea\x32\x57\x99\x2d\x76\x93\x44\x71\x04\x19\xf2\xc6\xea\xd1\xa4\x0f\xeb\x7a\x4c\x71\xf7\x4a\x56\xe0\x35\x2a\xec\x0b\x74\xfe\xe8\x87\x49\x00\x48\xb0\x08\x10\x9b\x69\x1f\x69\xec\xcd\x5a\x10\x92\x0b\x2c\xd1\x02\x2f\x01\x45\x58\x08\xb2\x04\xe4\x63\x1e\x10\x8a\x43\x22\x57\x0e\xa5\x3b\xe5\x32\x43\x22\x24\x8a\xf0\x0a\x51\x80\x00\x49\x86\xa6\x80\x62\x9e\x50\x08\xd0\x2c\xe1\x72\x01\x1c\x45\x6c\x49\xa8\x36\xec\x07\xcc\x83\x23\x84\x05\x22\x74\xc6\x78\x04\x81\x43\x6d\xba\x42\x31\x70\xf5\x18\x53\x1f\xac\x9f\xc6\x21\x9e\x12\xd5\x2d\x92\x20\x24\xa1\xf3\x41\x8b\x6c\x91\x1f\x26\x42\x02\xd7\x22\x41\x1f\x6b\x0c\xe9\x80\x25\x72\xca\x12\x1a\x3c\x11\x6a\xfe\x76\x6c\x40\x7b\x8c\xc3\xc1\x9f\xf6\x6b\x26\x22\xe0\x2c\x6e\xeb\x59\xfa\xb1\x17\x73\x98\x91\xc7\x5f\xb7\x5f\x25\x7d\x50\x6e\xc5\xda\x4e\x7d\xef\x83\xaf\x0e\xb7\x21\xee\x69\x41\x7a\x5e\x2d\x51\xad\x32\x9e\x0c\xc5\x76\x8c\x77\xa1\xed\xc7\x5e\xc0\x1e\xa8\x90\x1c\x70\xf4\xd9\xba\x59\x48\x19\x7b\x07\x7a\x12\x9e\x70\x10\x11\xba\xe5\x54\x74\xe8\x2a\xd5\xcf\x83\x70\xfa\xc4\x55\x3c\x7c\x9a\x12\xad\x13\x12\x38\xc5\xe1\x53\x84\x1f\x9f\x18\x27\x73\x65\x6a\x6d\x5c\xb4\xa4\x42\x31\x0b\x89\xbf\xfa\x32\xc9\x50\xde\xa7\x1b\x8b\xd3\xce\x84\x72\x0e\xfb\x43\xdb\xe4\x72\x28\xfc\x05\x44\x50\x84\x53\xb3\xb2\x3f\xf8\x12\xf9\xd5\x0f\x6f\x3d\x37\xc5\xfa\xad\xe4\x58\x66\xe2\xdf\x28\xb9\xf5\x23\x46\x89\x64\x9c\xd0\x79\x8b\xa6\x64\x49\xd9\x4e\x59\xfe\xa0\xc9\x78\x17\x5d\x89\x49\xc8\xe4\x4e\x43\x3e\x99\x3b\xf9\x8d\x28\x89\x9e\xf6\x4e\x0a\x32\xc7\x61\x08\x3b\x1f\xf2\x87\xd3\x10\x33\xef\x4d\x2a\xf2\x22\x9d\x65\x67\x51\x3f\xb9\xbe\x40\x8a\x2f\xe0\xb5\x8b\xfa\x9c\xbb\x3e\x8e\x89\x05\xdc\xff\xd5\xe7\xc3\x2a\x85\xa3\x77\x4a\x57\xc6\x48\x0d\x34\x27\x2a\x43\xe1\xb9\x95\x2e\xf3\x9f\x8f\xbd\x19\x51\x5c\x0c\x97\x98\x0f\x79\x42\x87\x02\x7c\x0e\x52\x0c\x73\xee\x07\x84\x0d\xed\xec\x60\xdf\x67\x09\x95\x43\x1f\x0f\x7c\x9e\xf7\x38\x05\xcc\x81\x7b\x92\xdd\x03\xdd\x8a\x9e\xc6\xfc\xf7\xd7\xa3\x9c\xcc\x1b\x23\xdc\x16\xdd\xa1\x2c\x00\x81\x0e\x14\x4a\x08\xf2\x70\x8d\xfe\x68\xe8\xfd\xdf\xcf\x14\x76\xd4\x7d\x35\xec\x2e\xd3\xbe\x4d\x4d\x45\xd1\xae\x2f\xaa\xac\xaf\xe2\x94\x2a\x41\xce\xc0\xad\xb1\x0d\xc4\xd2\x1f\xbf\x7a\xf5\xf5\x66\xa5\x1a\xc5\x51\x59\xe3\xd2\xd2\xd4\xa0\x50\x88\x2a\xb3\xe8\x46\x8b\x66\x3e\x87\x38\x26\xc3\xe5\xf1\x50\x6b\xd3\xf0\xe5\x3f\x8f\xff\x35\x8c\x39\x7b\x5c\xa5\x11\xa5\xad\x80\xf9\x37\xa3\xa8\xc8\x9f\x04\x4b\x22\x18\x4f\xe3\xd8\x8b\x0c\x47\x17\x4f\x88\x40\x1c\xfe\x91\x10\x0e\x41\x86\x66\x86\x87\x8e\x07\x7f\x19\x7c\xad\xe3\x65\x88\x25\xf0\x23\xf4\xb0\x00\x0e\x19\xc1\x34\xe2\x65\xf4\x0e\xe4\x82\x09\x40\x0f\xfa\x4f\xed\xd9\xd0\x14\xe6\x84\xa2\x07\x22\x17\x68\x3f\x2f\x40\xee\x1f\x9a\xda\xce\x14\x80\x22\x0e\x11\x5b\xaa\xce\x4d\x10\x86\x8c\x5c\x3a\x80\xb4\x26\x94\x1a\xfa\x00\x19\xce\x55\xac\x36\x66\x2a\x74\x9c\xcf\xf8\x4a\x01\x91\x64\x19\x31\xb5\xd6\x25\xb0\x54\x19\x81\xe2\xce\xd2\xac\xca\xe4\x82\x96\x25\x30\xea\xab\x3f\x4f\x8e\x54\x1f\x39\x26\xc2\x1c\x10\xa3\xe1\x0a\xc1\x63\xcc\x04\x04\x88\xd1\x02\x17\x19\xc5\xef\xef\xee\xae\x33\x96\xde\xa0\x44\x00\xea\xad\x99\xe4\xf1\xab\xe3\xd7\xaf\x8a\x33\xdd\xcb\xe8\x11\x6a\xaa\x63\x3e\x16\x80\x0e\xd4\xec\x00\x15\x89\x33\x2f\xfb\xc2\xf4\x69\xe2\x17\x5a\x60\x41\xf7\xa5\x91\x75\x40\x04\x9e\x86\x10\xe8\x19\xc9\x28\x2a\xb6\xfb\x7d\x1f\x1b\xf4\xbe\xf2\xa3\xa7\xa3\x4c\xfc\xb3\x10\xcf\x0f\x1b\x94\x47\x4d\x01\x11\x88\x32\x89\x28\xf8\x20\x04\xe6\x2b\x93\x60\x2d\x58\x12\x06\x68\x0a\xd9\xf4\x92\x92\x60\xff\xac\xe0\x32\x6a\x80\x79\x48\x80\x23\x15\x70\x09\xa3\xe2\x08\x31\x8e\x88\x44\x0f\x24\x0c\x91\x8f\x95\xd0\x14\x97\x59\x79\x50\xd7\xf8\xcc\xe4\x07\x48\x3e\x10\x1f\x06\x6b\x1c\x72\x3a\xbc\x9d\x4f\xde\xf9\xe4\x74\xaa\x3f\x8b\x4f\x1e\xa6\x9a\xd6\x96\x4c\xd8\x79\xcd\x73\xc5\x75\xea\x6b\x11\xfa\x19\xc2\x27\x48\x4b\x3f\x49\x5a\xd6\xb8\x99\x63\x06\xdd\x3d\x17\x93\x3c\xd9\x6c\xd7\xa2\x03\x07\xca\xc0\xb7\xd9\xd4\xf0\x2c\x6e\x49\x0b\x8c\x12\x69\x7f\xf1\xed\x66\x9b\x3a\x6b\x79\x55\x3a\xb7\x1d\xa7\x2d\x5a\x5b\x55\xfa\x8d\xf7\xeb\xd6\x33\xde\x79\xcf\xae\x9b\x47\xd8\x6e\x5f\xef\xe5\xc9\x33\x1d\x59\x3a\xce\x2f\xb1\x69\x57\x47\x67\xeb\x25\xd2\x27\x60\xa0\xb6\xc8\xe2\xf8\xa2\x98\x05\x9b\xbb\x9f\x98\x05\x8d\x8e\x47\x27\x5e\x33\x34\x23\x5c\x48\x24\x1f\x98\x99\x39\x93\x63\xc5\x1c\x04\x50\x79\xa4\x08\x38\x69\x45\x1a\xfb\xd1\x74\xa5\x33\x03\x53\x11\x10\xe0\xab\x4c\xe8\x67\x36\x6d\xdb\xa4\xdb\x70\x57\xfa\xb3\x3b\xb2\x52\xef\x82\x04\xe0\x63\xee\xe9\x21\x69\x06\x24\x96\x89\xa8\x63\xa0\xb0\x21\xd4\xdd\xe2\xd7\x30\x60\x3a\x8e\x64\xb8\x49\x9f\x6a\xd4\xcf\xea\xf5\xb7\xe1\x0f\xbf\xf0\xf9\x05\xc7\xcf\xed\x0e\x2f\x7c\xfa\xc3\x0b\x6d\x1e\xaf\xef\xba\x98\xe7\xae\x22\x40\xfa\x43\x43\xcf\x07\x2e\xc5\x90\x33\x26\xf5\xcf\x41\x0c\x91\x8b\x01\x5c\x36\xe1\xa8\x3f\xfb\xfe\x02\x13\x5a\x42\xba\x87\x55\x13\xce\x3d\xac\x4a\xc0\x84\x9a\x11\x79\xe2\x9e\xc4\xde\x12\x38\x99\xad\x8c\x0f\x53\x5e\x39\xd7\x6f\x14\x30\x30\x2b\x3d\x91\xc4\x4a\xd1\x91\x75\xb6\x14\x47\x85\x43\x11\x9f\x20\x1e\xfc\x9b\xf8\xee\x17\xc8\xba\x62\x64\x3c\x30\xca\xbb\x51\xab\x5e\x1c\x04\x10\xa8\xf8\x93\x42\x11\xfa\x33\xf8\x92\x71\x67\x65\xab\x17\xec\xda\x9d\x3e\x30\x7e\x1f\x32\x1c\x68\xbf\xea\xa5\x47\x4a\x7c\x4c\x75\x34\x8b\xc1\x27\x33\xe2\xe3\x30\x5c\x21\xad\xb2\xba\x9e\x80\x75\xd0\x93\x0c\x11\x1a\x10\x1f\x4b\x40\x44\x0a\x94\x1d\x47\x61\x88\x83\x0f\x64\x09\x48\xd1\x44\x92\xe3\xd9\x8c\xf8\xcf\x8a\x7c\x0d\xb1\xa7\x83\x27\x6c\x0f\x1a\xf5\xd2\x3e\x38\xf8\xe9\xef\x6f\x3e\x7e\x75\xf8\x46\xff\xfd\xa7\xc3\xc3\xa7\x03\xfb\xeb\x8d\x89\x27\xbf\xb3\x80\xf2\x51\xef\x4d\xd1\x70\xa5\xe5\x81\xd2\x03\x33\xba\x9c\x43\x04\x5a\x30\x21\xc7\xca\xb4\x1a\x04\x68\xd4\x89\xc9\x05\xf0\x07\x22\x00\x61\x8a\xe0\x51\x72\x6c\x39\xb6\x65\x36\xb5\x62\xde\xcf\xf5\x53\xad\x36\xb5\x6f\xb2\x9e\xaa\x31\x08\x8d\x8b\xb1\x67\x17\x19\x77\x91\x11\x6b\x75\x99\x73\x3c\xc3\x14\xf7\x03\x2c\x16\x53\x86\x79\x10\x73\xb6\x24\x01\x70\x51\x3a\x62\xfd\x64\xa9\xe1\x98\xfc\xa7\xa9\xe3\x8d\xd1\xb1\x7d\x56\xc2\xd1\xdb\x5c\xa6\x18\x79\x06\x21\x18\x9e\x66\x38\x14\x39\x47\x33\x16\x06\xc0\xed\x5e\x5f\xf6\xd4\xc4\xe6\xe2\x33\x16\x2b\xfc\xc2\x36\x9a\x3d\x81\xbb\xc4\x7c\x18\x92\xe9\xd0\x0e\x61\x98\x0d\x41\x0c\x4b\x24\xf8\xfc\x22\xc8\xb9\x45\x48\xae\x62\x18\x23\x15\x45\x0b\x12\x90\xd8\x88\xbd\x69\xe8\xf5\x83\x47\xa8\x82\x99\xea\xa0\x0f\x42\x8c\x91\x2e\x20\x39\xec\x43\x40\xa4\x92\x4d\x29\x20\x21\x44\xc4\x99\xa9\x8d\x55\x5a\x7e\x16\x8c\x9e\x61\x89\x8b\x9b\x89\x92\x44\x70\x51\xb7\x5f\x9d\x4a\xf2\xba\x7a\x3a\xb9\x46\x1a\xa9\x3c\x6a\xce\x32\x23\x94\xf0\xd0\xa4\x3f\xe3\xa1\x73\xd8\x79\xfc\x7a\xf4\x7a\xb4\xb7\x67\x97\xa6\xa5\x23\xfa\x86\x49\xb3\x31\xef\xc5\xc0\x23\x22\x84\x3b\x85\x7d\xb3\xdb\x96\xfd\x2b\xa5\x92\x3d\x28\x17\xb3\xfa\x4a\x61\x45\x11\x7b\xe8\x4a\xb5\x6f\xab\x6f\x11\x8e\x73\x30\xe5\x34\x13\x1e\x9e\x0e\xdd\x9d\x0c\x12\xe1\xb9\x1d\xaa\x3b\x9c\xe5\xc9\xe0\xeb\xc1\x71\x0e\x71\x9d\x84\xe1\xb5\x3e\xf0\x34\x46\x17\xb3\x4b\x26\xaf\xcd\x42\x55\x43\x98\x3d\x01\x33\x9a\x3e\x52\x92\x18\x2a\x01\xa5\x3a\x93\x27\x39\xfd\x9a\xf7\x16\x74\xd2\x96\x3f\x76\x7e\x0e\x56\x51\x68\x69\x44\x11\xa6\x41\x4a\xa3\xdf\x17\x92\x71\x3c\x87\x81\x14\xc1\x74\xc0\x41\x29\x25\x61\xf4\xf4\xcf\x8b\x0c\xc2\x10\x1f\x28\x8d\x3e\x5d\xdb\x83\x55\x78\x43\x1f\xe8\x92\x70\x46\xb5\xa7\xb5\xe4\xbe\xbb\x99\xbc\x9f\x5c\x4e\xbc\xeb\xab\x9b\xbb\xd3\xaf\x47\xa3\x51\xfa\xfc\xbd\x37\xf9\x70\xf7\xbd\xf7\x76\x72\x7b\xf1\xce\x3b\xbf\x9c\xbc\xfd\xe1\xfc\xec\x34\xb7\xeb\x1c\x62\x72\x79\x75\xf9\xdf\x3f\x5e\x7d\xb8\xcd\xa0\x32\x7d\xae\x03\xba\xba\xf9\xce\xbb\xb9\xfa\xe1\xfc\x54\x1f\x8f\xcc\xc1\xae\x27\x77\xdf\xdf\x7a\x67\x93\xbb\xc9\xe9\x50\xd9\x58\x6a\xe9\xee\x4c\x06\x98\x88\x05\xa6\xc7\xaf\x5f\x9f\xa4\xcd\xe3\x10\x4b\x10\xb2\x7e\x36\x71\xf8\x80\x57\xa2\x66\x1e\xd5\x40\x1b\xe7\xb1\xc5\x4b\x6a\x71\xa7\x2e\x48\x3f\x56\xca\x4e\xe8\xdc\xf5\x47\x55\xbc\xc1\x0a\xdb\xe9\xee\xd7\x7a\xa0\x36\xb2\x19\x94\xfb\x3b\x27\xb8\x64\x61\x92\x1d\x3c\xe8\x6b\xef\x34\x2e\xcb\xaf\x74\x54\xab\xdd\x64\x4d\x56\x7f\x6a\x4f\x97\xf6\xf3\x59\xb2\x73\xa0\x89\x0d\x23\xf2\x08\x7c\x7c\x3c\x18\x0d\x5e\xad\x15\x7d\x45\xc5\x6d\x0c\xb7\xff\x4e\x28\x79\x1c\x0f\x87\x43\xc1\xfc\x7b\x43\x77\xa0\x7e\x82\x2c\x29\xfc\xad\x64\x1c\x3e\xdc\xfc\x70\x7a\xff\x57\x31\x1e\x0e\x4b\xad\xd6\x99\x5e\xa6\xe1\xf5\xb4\x70\x9c\xae\x46\x52\x49\x20\xfa\xa6\x9f\xb1\xee\xba\xd1\x40\xae\xce\xce\xdf\x7e\xf8\xee\x74\xee\x4b\xae\xe8\x9e\xd4\xbb\x85\xaf\x87\xd2\x8f\x8f\xca\x07\x58\x4c\xf3\xab\x93\x57\x27\x27\xba\xbd\xe4\x75\x55\x8e\x7e\x4f\xfc\xfb\xcc\x5b\xda\xf3\x52\xca\xdb\xe5\xde\x3f\xed\xeb\x45\xfa\xa0\x8f\xf4\xcb\x0f\x79\x8f\xf9\xfb\x1c\x7b\x05\x98\xd1\x2b\x05\xe3\x3c\x7b\x3d\x7a\x7d\xac\xd1\xe6\x3c\xf6\xb3\xe7\x85\x99\xd5\x9d\x2f\x4f\x9c\xb9\xad\xcc\x61\xe6\xee\x9c\x48\xa7\x5d\x97\xf1\xed\xef\x8c\xea\x38\x4d\x25\x05\x2c\x20\x49\x88\x62\x65\xc3\xef\x4d\x80\x4e\x1b\xf2\xf5\xae\xdd\x93\xb1\xc7\xb8\x53\x1a\xda\x02\x06\x32\x8a\xc3\x02\x35\x15\xc6\x39\x0b\xaf\x43\x4c\x61\x92\xc8\x85\x51\x47\x07\xe4\xf2\xea\xf2\x3c\x97\x6c\x79\xba\x0d\xcc\xf5\xd5\x99\x3e\x44\x75\xfa\xf2\x40\x40\x38\x1b\xaa\xf8\x7a\x58\xd3\xae\x95\xcb\x05\xd2\x9a\xe7\x42\x5e\x5c\xde\xde\x4d\x2e\xdf\x9d\x7b\x17\xd7\x29\x1c\x89\x73\x00\xbb\x53\x38\x46\x24\x50\x6e\x5e\xae\x8c\x27\xd0\x0b\xfc\x0c\xa8\xa0\xb7\x0d\xba\xbb\xb7\xf7\x8f\x04\x84\xcd\x9d\xfa\x68\x89\x39\x31\x49\x87\x7b\x1c\x6c\x0f\xa1\x00\x84\xcf\x49\x6c\x92\xb4\x9e\x2d\x83\xac\x84\x84\x28\x4f\x4c\x7b\x7b\x7b\x79\xe6\xa9\x7a\xcd\x5a\x02\xcf\x4f\x84\x64\x91\xc7\xc1\xa6\xac\x01\xcc\x08\x25\x59\xce\xd6\xb7\xdb\xba\x03\x1b\xa2\x74\x07\x03\xc2\x86\xcb\x63\x1c\xc6\x0b\x7c\xa2\x61\x78\x12\x42\x3b\x84\x13\xc5\x5a\xe1\x9c\x8d\xc6\x56\xb8\x54\xc7\xda\xa1\xb0\x94\x9c\x4c\x13\x09\x11\xa6\x64\x06\x42\xb6\x83\x13\x2a\x24\xa6\xfe\x3a\xa2\x01\x8e\x25\xf0\x76\xa0\x05\xa6\x41\xb8\x0e\x28\x64\x73\xa0\x4a\xf3\x5b\xa1\x84\x0c\x08\xeb\x2a\x35\xa0\xcb\x36\x50\x67\xe2\x53\x91\x8c\xd3\x97\x2f\xdd\xe4\xb8\xd7\x44\xc3\x1c\x75\xb8\x27\x34\x18\x57\xa5\xab\xdb\xd4\x42\x27\x70\x72\x5d\x67\x51\x90\xfb\x17\x11\x83\x9f\x02\x64\x64\x1c\x83\x30\x6f\x39\x0c\x48\xec\x66\xcc\x4b\x1c\x26\x70\xa7\x73\xdd\x8b\x6b\x6f\x72\x76\x76\x73\x7e\x7b\x5b\x46\x49\x48\xd0\x80\x73\x7b\x77\x73\x71\xf9\x5d\x05\x5e\x00\xef\x86\xc0\x41\x5b\xe4\x60\x01\xd8\x5d\x2b\xd5\x22\x79\x3f\x4e\xae\x2b\x88\x5d\x39\xcb\x3a\x62\x42\x6e\x86\xa1\x4c\x8c\x6d\xd8\x8b\x5e\x8d\x6d\x84\xc1\x01\x0b\x46\x37\xc5\x99\x01\xdf\x54\xd2\xb6\x7c\xbb\x11\x8e\x64\x12\x87\x9e\x20\xbf\x40\x71\xb1\x55\x54\x9f\xcb\xbb\x3f\xbf\xaa\x76\x57\x42\x5a\x8b\xa0\x16\x70\x0d\x08\x77\x17\x3f\x9e\xdf\xde\x4d\x7e\xac\x6a\x81\x52\x38\x3c\x2f\xc4\xa7\xf6\x71\x89\x98\x51\xa1\x7c\x52\xd0\x95\x3b\x8b\x11\x24\x5c\x97\x7b\x1a\xb0\xce\x3e\xdc\x4c\xee\x2e\xae\x2e\xab\x88\x5b\x68\xb8\xc5\xdc\x4a\xfa\x16\x77\x03\xf1\xa7\xbd\x6d\x22\x7f\x13\xdf\xba\xfb\x87\x14\x5e\xf9\x07\xf4\x02\x9d\x9d\x5f\xdf\x9c\xbf\x9b\xdc\x9d\x9f\x6d\x82\x1d\x73\x42\x7d\x12\xbb\x6f\xb4\xb7\x61\x05\xfa\x25\x46\x3d\x69\xdd\x19\x75\x91\x9e\xd1\x5f\xcc\x78\x93\x4a\x16\xc5\xef\x33\x4a\x41\x57\xaa\x06\xb0\xec\xac\xc7\x0e\x56\xd7\x81\x39\x28\xb6\x96\x1e\x0c\xa6\x2b\x09\x4d\x8a\xd9\xc8\x66\x11\xdb\xd3\x4a\xba\x29\x0d\x01\x54\x6e\xd7\x7b\x8e\xb9\x5d\xcf\x9b\x9a\xb1\x83\x1a\xc9\xb0\x89\xdd\xb7\x57\x57\x3f\xd4\xcb\x4a\xbb\x29\x08\x3c\x73\x44\xd1\x6c\xb8\x75\x9d\x2f\x09\x8f\x72\x10\x73\x26\x99\xcf\x3a\xea\x60\x8a\xa5\x8c\x59\x48\x1c\x35\x85\xfc\xaa\x45\xbb\x98\x9d\x91\x5e\xa0\x33\x88\x39\xf8\x58\x42\x70\x84\xee\x21\x96\xba\x0a\xef\xb3\x28\xc6\x92\x98\xdd\x9b\x4a\x0f\x1c\x94\x75\x00\x1f\x84\xcc\x6f\x9c\xc0\xb2\x44\x8b\x98\x3a\x65\xda\x48\x20\x19\x6a\x67\x4f\x80\x63\x32\xb0\x2b\xb6\xee\x08\xf6\x54\x67\x77\x04\x16\x43\xab\x42\xd6\xa0\x6c\xa6\x11\x69\xa4\xc4\x89\x5c\x6c\xea\xd1\x0a\xb8\x38\x09\x08\x50\xbf\xd1\x64\xdb\xfb\xd5\x15\xc3\x4d\x53\x16\x8d\xeb\x87\x98\x44\x5b\x24\x88\x1a\x99\xe3\x07\xaf\x03\x81\x2a\x72\x4c\xbc\x7b\x58\xb5\x23\xe9\xc6\x7e\xff\x57\x48\xf8\xf3\x25\x49\xa7\x84\xdf\xc6\xcb\x4d\x12\x7e\x8b\x62\xf7\x58\x3a\x0b\xdb\xa2\x95\xb9\xee\x8c\xd8\xdd\x1f\x3a\x08\x7a\xcd\xb5\x11\x16\x7b\xa0\x5d\x75\xcf\x62\xa4\x96\x8f\xb6\xce\x56\x2c\x85\x89\x39\xd0\xbc\x4d\xe7\x1d\x75\xd6\x22\xa5\xdb\xee\x1b\x27\x65\x19\xe2\xc6\x93\x51\xc0\xdc\x60\x56\xdc\x4c\x69\x13\x25\x75\xf1\x36\xd5\x54\x17\x77\x73\x75\x75\xb1\x37\x50\x26\x17\xad\xbb\x74\x5d\xac\xec\x55\x92\x2d\xf1\x9f\x31\x33\x99\x09\x6c\x6c\x01\x35\x54\xb6\xcb\xc0\x53\xe4\xed\xc6\xee\x62\x3f\x4f\x06\x1b\x54\x0f\x6a\xb0\x37\x72\x01\x2e\xfe\xe6\x26\x5d\x8b\xbd\x9d\xf4\xb6\x31\xee\xad\x83\xa1\x2e\xcb\xb5\x04\x40\x5b\x01\xac\x44\x3f\x96\xc8\x38\x91\x13\xf1\x1f\x42\x75\x95\x6f\xac\x6d\xcb\x47\x5a\x44\x6c\x61\xc5\xec\x64\x87\x6c\x5e\x61\x46\xc0\x12\x38\x91\xab\x31\xda\xef\x5d\xd0\x19\xeb\xa5\x67\xe7\xf2\x6c\xbc\x50\xed\xd8\x4b\x45\x69\xaa\xd1\x95\x00\x7e\x11\x8f\xf3\x50\x8e\x9e\x10\x89\x0f\x7a\xa3\x81\xfe\x5f\xef\xb0\x04\x3b\x89\x73\x60\xe3\x1a\x7f\xea\xe1\x38\xee\x7d\x44\x4f\xa8\xd7\x2b\x01\x5f\x67\x69\x60\x65\x69\x5d\x07\x7e\xa9\xc7\xed\x04\xe0\x3a\xa0\xff\xb2\xea\x32\xae\x0d\x0e\x4d\x64\x8d\x5e\x55\x82\x7b\x1d\xf8\x95\x76\xbb\x85\x88\x5e\x04\x73\x94\x57\x4b\xa3\x1a\x2d\x6a\x45\xe2\x80\x5d\x94\xb0\x5a\xa4\xee\x80\xdd\x1a\x2b\xff\x5e\xb9\x88\x46\xe7\xd1\xd8\x67\x2e\xb7\x46\xe3\x6b\xc4\x35\x13\x53\x76\xf7\xad\xe0\x56\xe0\xb5\x21\xa2\x11\xd1\x8a\xbe\x12\x04\x1b\x11\x1c\x05\xab\x2d\xa8\x14\x11\x71\x4c\xde\x99\x1c\xbd\x29\x79\xaf\xc0\xff\x0d\x56\xe3\x72\xb2\x8e\x9e\xca\x55\xe5\x9f\x7a\x8f\x7d\x1c\x93\xfe\x3d\xac\xca\xb3\x9e\x2d\xa2\x4a\xf5\x51\xf4\x54\x59\x79\x2b\xc4\x85\x94\x71\x8e\x6c\x2b\xc3\xa5\x4a\x71\xb1\x03\x7d\x56\xc4\x2d\x0b\x17\x9b\xd3\xb2\xdb\x3b\x16\xc0\xb8\x58\x97\x44\x4f\x68\x54\x81\xbb\x25\xbf\xb8\x70\x82\xfc\x52\x86\xd3\x3d\xa5\x60\x79\x0d\xb6\x0e\xea\xc2\xe1\xdd\x11\x95\x7d\xd4\x27\x41\x59\x5a\x7e\x48\x80\xca\x3b\x8e\x7d\x68\xc0\x35\x10\x7d\xbd\x07\x5c\x43\x20\xc4\x12\xa8\xbf\x1a\x57\xeb\xa9\x0a\x6e\x14\x89\x9e\xbb\x62\xb7\xe5\x13\x4f\x9f\xbb\x25\x72\xe5\xc5\x76\xd7\xdc\x67\x34\xd0\xdb\x69\x38\x3c\x38\xa8\xad\x0a\x28\x72\xf6\xda\xaf\xde\x21\x3a\x3d\x45\xbd\xf4\x36\xb0\xde\x11\xea\x25\xf4\x9e\xb2\x07\xda\x3b\x2a\x50\x2a\xd5\x78\xd0\x93\x39\x9f\x75\x84\x7a\x51\x22\x13\x1c\x7a\x32\x14\x0a\x9b\x32\x0a\x3d\xe7\xa4\x66\x56\xdd\xb9\xd5\xc5\x1d\x63\x8d\xeb\xaa\x3f\x25\x2d\x11\xc0\x27\xba\x7e\x5d\x2d\x69\xd7\x2b\xcc\x9d\x1b\x4b\x9c\xd2\xad\x03\x68\xea\x73\x6f\x75\x79\xad\xa6\x94\x5f\xd0\x08\xb5\x2c\xcf\x20\x2b\x75\xe7\x92\xf2\x98\x5d\x87\xf2\x36\x44\x91\x4f\x65\x29\x93\x44\x2e\x98\x89\x84\x15\x55\x19\xe3\xb4\x51\xeb\x88\xbb\x3d\x53\x24\xf4\xf8\xde\x5c\x61\x07\xc1\x7b\xc6\x6b\x75\x6e\x96\x02\xa8\x5f\x46\xe3\x52\x47\xed\x30\x6d\x94\xe3\xf9\xba\x63\x02\x8f\xfa\xe5\xb8\xb4\x2c\x22\xd8\x43\x0d\x10\xe4\x9b\xbf\xe6\x20\xd9\x7e\xcf\x9c\x24\xb1\xc9\xc0\xe7\xcc\x4c\xa4\x1f\x3f\x2f\x39\x71\x6b\x80\xe8\x29\x6f\x39\xe8\x9d\x8c\x8e\xff\xd2\x1f\x1d\xf7\x47\xc7\x77\xa3\xd1\x58\xff\xff\x7f\xb2\xb1\xd7\x24\x30\xb9\x15\x9c\xeb\xaa\x76\xa5\xce\x5d\x17\xe1\x77\xf9\x8e\x0b\xbe\xcb\x77\x2a\xb8\xbf\x93\x7c\x27\xcf\x3d\xea\x52\x0d\xe9\xc7\x75\xc1\xf0\x2c\xdd\xb8\xa8\xdb\xcd\xf8\x63\x07\xd1\x52\xc4\x6b\xdc\xab\x6a\x0a\x7c\xb5\xdb\x4b\x05\x60\x1d\x11\x6f\x3a\x76\x63\x36\xa6\xaa\xf8\xb7\x6b\x7a\xac\xc1\xfb\xdd\x44\x2f\x9e\xd8\xd3\x6b\xf5\x91\x2b\x5f\xfe\xbb\x21\x2b\xc2\xd2\x5f\xd4\x18\x89\x1a\x9b\x4e\xc8\xd1\x53\x4d\xb6\xae\x5a\xe7\x3c\xf6\x53\xfd\x30\xef\x01\x38\x07\xae\x6d\x2d\x21\x2b\x2a\x0c\xf2\xde\x91\x79\x4d\x4c\x9f\x5b\xaa\x39\xbe\x1e\xb2\xf9\xa0\x10\x87\x3f\xab\x3c\xd2\xa3\x89\x5d\x45\xe2\x38\x8e\x4f\x32\x66\x37\x9d\xf8\x44\xc3\x36\xc7\xdf\x5a\x06\x6e\xad\x5d\xd7\xcb\x2a\x83\xd7\x35\xa7\x31\xea\x1d\xa7\xc3\x0c\x48\x04\x54\x14\xdf\x88\xf8\xb5\x4c\x26\x0d\xd3\xd9\xeb\x6e\xcd\x89\x40\xea\x30\x9b\x30\xf3\x37\x66\xea\x69\x64\xc1\xaa\x89\x50\xdc\x9e\xdf\x34\xa1\xe1\xb6\x1c\xaa\x09\x29\xdd\xe1\x2c\x23\xda\xe7\x0d\xc8\x8e\x04\x1d\x81\xb5\x66\x00\x9d\x68\xb8\xa2\x6b\x2f\x5e\xae\x25\x19\x77\x88\xe1\xad\x04\xf0\xda\x24\xac\x15\x3d\x13\x6c\x1d\x89\xee\xd2\xcd\xaa\xf6\x6d\x99\x59\x17\x0a\xf6\xe5\xe0\xa6\x82\xfa\x46\x64\x6a\x66\xa8\x52\x9c\xaf\x25\x68\xfd\x81\x97\xa7\x4c\xee\x0e\x78\x43\xb1\xa6\x86\x8a\x59\xd9\x7a\x7e\x6d\xb5\xe5\x64\x34\xfa\xcd\x25\x4e\x2d\x11\xfb\xc3\xe5\xed\xf5\xf9\xbb\x8b\xf7\x17\xe7\x67\xcf\x0d\xdb\x5d\xfd\x75\x9a\x87\x36\xb9\xec\x75\x55\x9f\x9d\x23\xdf\x39\xf2\x9d\x23\xdf\x39\xf2\x9d\x23\xff\xc2\x8e\x5c\x90\x5f\xa0\xd9\x89\xd7\xee\x2a\xec\x7c\xf7\xce\x77\xef\x7c\xf7\xce\x77\xef\x7c\xf7\x97\xf3\xdd\x46\x94\xed\xce\xbb\x7e\xe7\x78\xe7\xbd\x77\xde\x7b\xe7\xbd\x77\xde\x7b\xe7\xbd\xbf\x94\xf7\x96\x7e\xac\xb7\x7f\xa0\xb9\xe2\xbd\x6e\x83\x6a\xe7\xc4\x77\x4e\x7c\xe7\xc4\x37\x70\xe2\x1b\x7b\xdf\x2f\xed\xc4\x77\x3e\x75\x1b\x9f\x9a\xee\xcb\x77\xf0\xab\x8d\x27\x05\x76\xbe\x75\xe7\x5b\x77\xbe\x75\xe7\x5b\xff\x28\xbe\xb5\x74\x05\xd7\x66\xaf\xe3\xd8\xdb\x05\xf3\x73\x27\xc5\xe2\xb2\x39\xe1\x94\x09\x3e\x3d\x75\xe2\x55\xcf\x7e\x0c\xec\x45\x49\x95\x5b\xca\x72\x46\xdf\x5d\x7d\xb8\xbc\x3b\xbf\xc9\x9e\x9a\xdb\x4a\x29\x2e\xdd\x05\x95\x4e\x96\xf3\x28\x77\x4d\xd5\x87\x99\x29\x56\x9b\x52\x7b\x6f\x6e\x69\xfb\xa8\x81\xb5\x2e\xa7\xa1\x64\xd7\x0d\x2d\x75\x0c\xd5\x79\xa9\x35\xcd\xb5\xac\xd5\xb8\x86\x86\x56\x6b\x49\xed\xad\xe9\x35\xaa\xeb\x40\xca\x6c\x94\x57\xa8\x85\x26\x67\xd9\xe9\x3c\x6f\xb6\xd9\x7a\xd5\xf3\xd2\x8d\x67\xcf\x7e\xeb\x72\x8d\x12\xa6\xe0\x1d\xf4\xf0\xec\xe2\xf6\xee\xe6\xe2\xed\x87\xc2\xb5\x11\x3b\x65\xdc\x29\xa3\x7b\xb1\xde\x34\xf1\xef\x41\x16\x5e\x57\x86\xc7\x38\x24\x3e\x91\x5e\x4d\x1b\x42\x3a\x82\x88\x31\xfa\x69\x34\x18\x8d\xbe\x39\x42\xa3\xc1\xe8\x58\xff\x79\x62\xfe\xa1\xff\xd4\x4f\xcc\x83\x6f\x8e\xd0\xf1\x11\x3a\x51\x7f\xab\x9f\xa3\x8f\x0d\x76\xa0\xd3\xdb\x35\xca\x2f\xc8\x2f\xb0\x53\xfc\x9d\xe2\x7f\x3e\xc5\x67\x14\xa8\x24\x38\x7c\x5b\xa7\xfa\x34\x89\xde\x13\x4a\x24\xa4\xad\xe8\xaf\x85\x76\xe1\xe3\x10\x8a\x77\x36\x23\x34\xe7\xec\x41\x2e\xde\x63\x5f\x32\x3e\x46\xc7\xa3\x8a\xfa\xdb\x11\xac\xd1\xff\x7c\x23\x65\x67\x00\x3b\x03\x70\x9a\x7e\xeb\x06\x20\xfd\xd8\x13\x40\x6d\x00\x68\x4f\xc4\x9d\x8a\xf4\x2e\x0f\xff\x03\x19\x40\xe7\xa4\x5a\x29\x53\x5a\x30\xdb\x40\xa1\xb2\x1a\xdb\x4e\xa9\x76\x4a\xe5\x7f\xde\x37\x68\x62\xce\xa2\xec\x02\xfb\x2f\xf1\x52\x51\xcd\x07\x24\x6a\xdf\xb2\xa9\xa9\x7a\x54\x5b\x4b\xcb\xd1\x2a\x80\x93\xb1\xd4\x84\xad\x72\xeb\xe7\x14\xfa\x67\x7d\x6b\xa9\xab\x50\xab\x11\xac\xda\x58\xf2\x46\xcf\x13\x4c\xe1\xce\xe8\x16\x09\x35\x15\xce\x5e\xa0\x87\x05\x50\xc4\x13\x4a\x09\x9d\x9b\x2f\x84\xeb\xbb\xfe\x11\x67\x4c\x1e\xa1\xf4\xb3\xd0\x33\x16\x86\xec\x41\x81\xd8\x4f\xec\xe2\x99\x04\x8e\x70\x10\xa8\x67\x38\xa3\x26\x56\xd1\x54\x19\x19\x0a\x09\xbd\x47\x92\x21\xec\xb0\x98\x7d\x9e\x97\x84\x80\x96\x24\x63\x31\xff\xe4\xf5\x4b\x14\x52\xd4\x17\xe8\xff\x86\x03\x85\x36\xb4\x08\x9a\xa3\xa1\xbd\xb2\xdb\xf9\x7e\xb3\xfe\x69\x60\x2a\xa4\xf2\x26\xcf\x7c\xaa\xa6\xd7\x81\x4a\xef\x99\x77\xeb\xad\xd1\x53\xd5\x11\x96\x92\xcf\x81\x2a\xc8\x0c\xba\x70\xaf\xde\x5a\x65\xac\xce\x79\xa3\x3e\xe6\x97\xf4\x0d\x4a\x57\xf9\x7d\xae\x21\x4a\x3f\xee\x32\xca\x4f\x66\x99\x5f\x56\x18\x25\x3a\x0d\x17\x37\x65\xfd\xd6\x98\xdf\x35\x16\xe6\xdb\xfa\xca\xa1\x12\x0e\x41\x0e\xae\x3f\x1a\xa2\x6c\x48\x35\x5b\xb5\xb5\x78\x36\xfc\x27\x24\xdf\x99\x4b\x48\xe1\x22\x18\x0b\x41\xda\xae\x36\x40\x2f\x90\xfd\x0e\xb8\xea\x25\xa1\xf6\x1b\x79\x10\x20\x62\x3e\x9d\x66\x69\xb9\x21\x57\x77\xe9\xee\x75\x94\xfa\x2d\x64\x19\x8c\x97\xde\xd4\xd7\x5f\x35\xcc\xf7\x38\xb3\xa1\x7a\x53\x42\x95\x27\x71\xe6\xeb\x05\x7a\x4f\xc2\x50\x8f\x9d\xc2\x83\x23\x44\xe3\xa4\x1c\x99\x28\xf7\x1f\x24\xfa\x83\x7e\xfa\x56\xae\x81\x43\xe3\x25\x4b\xa4\xb9\x40\x44\x7f\xd2\x1e\xd3\x4c\x35\x10\x9b\xa1\x2b\x0d\x7f\x67\xbf\x42\x80\x22\x10\x02\xcf\xf3\x24\x22\x13\xdc\x58\xd3\x19\xa4\xd9\x1c\x0b\xbc\xb5\xf7\x44\xe8\xab\xd3\x2a\x68\x56\x58\x0d\xfb\x8f\xe9\xdd\x82\x05\x34\xfb\xa1\xde\x27\x04\x51\x2c\x57\xb7\x92\x13\x3a\xff\x11\xc7\x07\x95\x0e\x8d\xb2\x95\x7b\x5c\xb3\x4f\xeb\x5c\xb2\x56\x40\x2d\xec\x5c\x59\x25\xa9\xe0\x9a\x0b\x09\x0b\x78\xd9\x75\x05\x4d\xfd\x95\xae\xa6\x2b\x20\x67\x5f\xc2\x36\x8d\x6b\x79\x2f\x5c\x53\x57\xa0\x94\x25\xa8\x6b\x04\x5e\xbc\xaa\xae\x9e\x44\x67\x2e\x1a\x44\x59\x4d\x96\xd7\x6d\x2f\xe6\x1a\x57\xb4\xa6\x56\xb5\x2b\xd9\x64\x03\x81\x26\x79\x54\xf7\x65\x6b\x08\xac\x57\x45\x97\x8c\x23\xd2\x32\x17\x5d\xf6\x58\xcb\x37\x50\x56\x29\x65\x00\xdd\xe8\x95\xa7\xc7\x25\xd5\xae\xee\x2e\x15\x57\xe7\x5d\x0a\xcd\x8a\x5f\xb3\x31\x5c\xd4\xfe\xba\x15\xcd\x5a\x13\xa8\x3d\x10\x50\x3f\xef\x6b\x8d\xa1\xf1\x70\x41\x1b\xb1\xcd\x38\x6b\x13\x7e\x07\x03\x51\x01\x5a\xff\xf7\xff\x01\x00\x00\xff\xff\x95\xd5\x6f\xc3\x8f\x9e\x00\x00")

func stacksIstioTelemetryStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioTelemetryStackYaml,
		"stacks/istio-telemetry-stack.yaml",
	)
}

func stacksIstioTelemetryStackYaml() (*asset, error) {
	bytes, err := stacksIstioTelemetryStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-telemetry-stack.yaml", size: 40591, mode: os.FileMode(436), modTime: time.Unix(1545249779, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksLocalstorageStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x53\x51\x8b\xd3\x40\x10\x7e\xcf\xaf\x18\x82\x70\x2a\x97\xe6\xf4\x49\x16\x7c\xa8\xd7\x16\x85\xbb\xb6\xd8\x53\x1f\x44\xc2\x34\x99\xb6\xeb\x6d\x66\xc3\xee\x24\x20\xea\x7f\x97\xdd\xa4\x69\x7b\x70\x3e\x25\x33\xdf\x37\xbb\xb3\xdf\x37\xf3\xd8\x6e\xc9\x31\x09\x79\x95\x00\xd4\xc8\x7a\x47\x5e\x14\xfc\xc9\x12\x00\x00\x6c\xf4\x57\x72\x5e\x5b\x56\xe0\xc5\x3a\xdc\xd3\xe4\xf1\x9d\x9f\x68\x9b\x77\x6f\x22\xe3\x51\x73\xa5\x60\xd3\x63\xb7\x06\xbd\x8f\xe9\x9a\x04\x2b\x14\x54\x31\x02\x60\xac\x49\x81\xb1\x25\x9a\x21\x83\xcc\x56\x50\xb4\x65\x7f\x24\xc1\xf1\x8e\x32\x9c\x33\x39\xf5\x16\xee\xd3\x3e\xab\x68\x87\xad\x91\x2c\xc2\x0a\x52\x71\x2d\xa5\xb1\xb6\x71\xb6\xd3\xa1\x4d\x72\x0a\x1c\x72\x79\x20\x17\x8a\xe2\x85\x59\x83\x72\x88\xb4\xce\x9a\xb6\xa6\x0f\x9a\x2b\xcd\xfb\x7b\x5b\x91\x82\x6f\xa8\x65\x61\xdd\x42\x3b\x2f\xb7\x96\x7d\x5b\x93\x8b\x5c\x17\xba\xd0\xf5\xda\x1a\x5d\xfe\x52\x30\x23\x43\x42\x49\x52\x5a\xde\xe9\x7d\x6c\xb9\xff\xed\x9b\x2f\x2d\x0b\xf1\x49\x38\x80\xdf\xe3\xa3\x52\xb6\x15\xad\x51\x0e\xf7\xd8\xa4\x0a\xbe\x8f\xc0\x39\x69\x24\xa6\x0a\xd2\xd9\x7c\x31\xfd\x72\xf7\x50\xac\xa7\x0f\x1f\x8b\xc5\xea\x73\xb1\x5c\x2d\x8b\xbb\x4f\x9b\x87\xf9\xac\x58\xae\x66\xf3\x4d\x7a\x7d\x59\x18\x5e\xe8\x9f\x9c\x1d\x81\xbc\x43\x97\x1b\xbd\xcd\x07\x51\x72\x17\xac\x8b\x32\xf8\xf4\x82\xfc\xe3\x2c\xfa\x9b\x3c\xcd\xf6\x19\x83\x5b\x32\xa3\x5d\x25\x8a\x18\x0a\x32\x97\x8e\x50\xac\x53\xc0\xd6\xd5\xc8\x89\x27\xd7\xe9\xb2\x9f\xa9\x93\x05\xd9\xb9\x4b\x83\x6a\x75\x8d\x5c\xf5\x41\xf6\x0c\x75\x00\xb3\xac\xa2\x6d\xbb\x1f\x22\x2f\xe8\x64\x44\x7a\x27\x86\x30\x27\x29\xf3\x3e\x33\x7c\x26\x3f\xbd\xe5\xa3\x4d\xd1\xbd\xa3\x77\xff\xe3\x12\x77\xda\x59\xae\x83\xad\xc3\xd1\xeb\xd5\xac\x58\x4e\xef\xe7\x9b\xf5\xf4\x76\xfe\xfe\xc5\x4b\x4f\x66\x97\x87\xd1\xf6\x0d\x96\xf4\x2a\xb2\xf6\xc6\x6e\xd1\x14\x0d\xb9\x5a\x7b\x7f\x1a\xef\x0c\x82\xbb\x7e\xf8\x6f\xc2\x56\xf9\x30\x32\xbd\x19\x71\xd6\x8e\xe0\xd5\x6b\x20\xae\x1a\xab\x59\xfc\xd5\x29\xf7\xb4\xe6\x02\xb3\xd5\x18\x46\x37\xe8\xba\x41\x29\x0f\x40\x1d\xb1\xf8\x51\xb5\x8b\x15\x3e\xdf\xb6\xa1\x33\x5d\xe3\x9e\xc6\x15\xca\x9f\x31\xaf\xbb\x99\xdc\x4c\xde\x26\xff\x02\x00\x00\xff\xff\xdc\x03\x0d\x3a\x3d\x04\x00\x00")

func stacksLocalstorageStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksLocalstorageStackYaml,
		"stacks/localstorage-stack.yaml",
	)
}

func stacksLocalstorageStackYaml() (*asset, error) {
	bytes, err := stacksLocalstorageStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/localstorage-stack.yaml", size: 1085, mode: os.FileMode(436), modTime: time.Unix(1545249779, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksNfsStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xda\x40\x10\xbd\xf3\x2b\x46\xa8\x47\x9c\x28\x55\x0f\xcd\x4a\x39\x44\x91\x2b\x72\x28\x20\x40\xa8\x37\x34\xd8\x03\x8c\x58\xef\x3a\xbb\x63\x27\xa8\xed\x7f\xaf\x76\xcd\x87\x1d\x40\xaa\x6f\xb3\xf3\xde\xdb\xf9\x78\xeb\x5d\xb5\x22\x67\x48\xc8\xab\x1e\x40\x81\x86\xd7\xe4\x45\xc1\x9f\xa4\x07\x00\x80\x25\x2f\xc8\x79\xb6\x46\x81\x17\xeb\x70\x43\x77\xbb\xef\xfe\x8e\xed\x7d\xfd\x10\x11\x3b\x36\xb9\x82\x59\x93\x7b\xd1\xe8\x7d\x3c\x2e\x48\x30\x47\x41\x15\x23\x00\x83\x05\x29\x30\xeb\x26\x5b\x3a\x5b\x73\x50\x25\xd7\x1c\xf6\x3c\xb9\x9a\xb3\xa6\x0a\xb3\xf6\x49\x1b\x11\x29\x5c\xe0\x86\x14\xbc\x55\xb8\x0f\xb7\xd3\x87\x90\x33\xa8\x97\x87\xaa\xee\x03\x29\xd3\x4c\x46\x3a\x5c\x8d\x42\x5e\xa2\x02\x99\xba\x91\x4a\x60\x32\x1d\x2f\x5e\x67\xaf\xe3\x51\x3a\x5d\x8e\x9e\x7f\xa6\x4f\xc7\xc2\x12\x18\xfd\x98\x2d\x67\xe9\x74\x91\x4e\x9f\xbe\xfc\x3e\x07\xcb\xe1\x78\x36\x0f\xd0\xbf\x2d\xdc\xe4\x79\x3e\xec\xa2\xd2\x5f\x93\xf1\x74\x1e\x13\x0d\xb0\xb6\xba\x2a\x9a\xb6\x02\x2b\x8e\xe4\xbe\x0c\x23\xf5\x42\x46\x0e\xe9\x98\xdd\x68\xbb\x42\xbd\x2c\xc9\x15\xec\x43\xf9\x27\xd6\x86\x64\xa0\xd9\xcb\xe0\x1d\x25\xdb\x0e\x32\x47\x28\x34\xc8\x49\x93\x10\x5c\x17\xbb\x20\x55\x65\x8e\x57\xd0\x99\x46\x2e\xae\x53\x3e\x2f\xfc\x10\x66\x61\xc7\xa7\x5b\x0e\xb5\x34\xea\x83\x32\xf2\xa8\x26\x23\x87\x45\xff\x6f\x33\x5d\x01\x93\x97\x96\x8f\x1a\x8e\xbc\xa0\x13\x05\xa8\xdf\x71\xef\x7b\xf1\xd0\x73\x4e\x3b\xce\x76\xfe\x68\x30\x36\x2c\x49\x67\xda\x2d\xd7\xe4\xc8\x7e\x8b\xe6\xe1\xf1\xf1\x6b\xcb\x28\x6d\x73\x84\x2f\xb3\x45\x81\x26\x3f\xb3\x13\xe8\xfb\x6d\xbf\x1d\x26\x59\x27\x2c\x6c\x65\x04\x12\x09\x96\xfd\x06\xd7\xfd\xa2\x6e\x1a\x04\x2e\x8d\x70\x56\xbf\x68\xe5\xa6\x79\x94\xdf\xa2\xa3\xfc\x04\x2c\x1d\xd7\xac\x69\x43\xb9\x02\x71\x15\x9d\x87\x61\x58\x5e\xac\x11\xe4\xf8\xee\xba\xb9\x30\xa8\x49\xa5\xf5\xc4\x6a\xce\xf6\xe7\x61\xbf\x55\xe4\xa5\xd9\x5f\x02\x35\x3a\xc6\x95\x26\x05\x57\x3a\xed\x01\xe4\xe4\x33\xc7\xa5\xc4\xff\x45\x7f\x68\xbd\x84\x77\x0f\x76\x1d\xf0\x10\xde\x38\xb9\xfe\x2d\x9d\xd6\x68\x2e\xa4\xd2\x8f\xd2\x3a\x81\x12\x65\xfb\x49\xed\x5f\x00\x00\x00\xff\xff\x7c\xd3\x96\x06\xc1\x04\x00\x00")

func stacksNfsStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksNfsStackYaml,
		"stacks/nfs-stack.yaml",
	)
}

func stacksNfsStackYaml() (*asset, error) {
	bytes, err := stacksNfsStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/nfs-stack.yaml", size: 1217, mode: os.FileMode(436), modTime: time.Unix(1545249779, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"stacks/cert-manager-stack.yaml":    stacksCertManagerStackYaml,
	"stacks/coredns-stack.yaml":         stacksCorednsStackYaml,
	"stacks/istio-crd-stack.yaml":       stacksIstioCrdStackYaml,
	"stacks/istio-stack.yaml":           stacksIstioStackYaml,
	"stacks/istio-telemetry-stack.yaml": stacksIstioTelemetryStackYaml,
	"stacks/localstorage-stack.yaml":    stacksLocalstorageStackYaml,
	"stacks/nfs-stack.yaml":             stacksNfsStackYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"stacks": &bintree{nil, map[string]*bintree{
		"cert-manager-stack.yaml":    &bintree{stacksCertManagerStackYaml, map[string]*bintree{}},
		"coredns-stack.yaml":         &bintree{stacksCorednsStackYaml, map[string]*bintree{}},
		"istio-crd-stack.yaml":       &bintree{stacksIstioCrdStackYaml, map[string]*bintree{}},
		"istio-stack.yaml":           &bintree{stacksIstioStackYaml, map[string]*bintree{}},
		"istio-telemetry-stack.yaml": &bintree{stacksIstioTelemetryStackYaml, map[string]*bintree{}},
		"localstorage-stack.yaml":    &bintree{stacksLocalstorageStackYaml, map[string]*bintree{}},
		"nfs-stack.yaml":             &bintree{stacksNfsStackYaml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
