configs:
  prometheus-config:
    content:  |-
      global:
        scrape_interval: 15s
      scrape_configs:

      # Scrape config for envoy stats
      - job_name: 'envoy-stats'
        metrics_path: /stats/prometheus
        kubernetes_sd_configs:
        - role: pod

        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_container_port_name]
          action: keep
          regex: '.*-envoy-prom'
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:15090
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: pod_name

        metric_relabel_configs:
        # Exclude some of the envoy metrics that have massive cardinality
        # This list may need to be pruned further moving forward, as informed
        # by performance and scalability testing.
        - source_labels: [ cluster_name ]
          regex: '(outbound|inbound|prometheus_stats).*'
          action: drop
        - source_labels: [ tcp_prefix ]
          regex: '(outbound|inbound|prometheus_stats).*'
          action: drop
        - source_labels: [ listener_address ]
          regex: '(.+)'
          action: drop
        - source_labels: [ __name__ ]
          regex: 'envoy_tls.*'
          action: drop
        - source_labels: [ __name__ ]
          regex: 'envoy_tcp_downstream.*'
          action: drop
        - source_labels: [ __name__ ]
          regex: 'envoy_http_(stats|admin).*'
          action: drop
        - source_labels: [ __name__ ]
          regex: 'envoy_cluster_(lb|retry|bind|internal|max|original).*'
          action: drop

  grafana-dashboardproviders:
    content: |
      apiVersion: 1
      providers:
      - disableDeletion: false
        folder: istio
        name: istio
        options:
          path: /var/lib/grafana/dashboards/istio
        orgId: 1
        type: file
  grafana-datasources:
    content: |
        apiVersion: 1
        datasources:
        - access: proxy
          editable: true
          isDefault: true
          jsonData:
            timeInterval: 5s
          name: Prometheus
          orgId: 1
          type: prometheus
          url: http://prometheus:9090

services:
  prometheus:
    global_permissions:
      - nodes
      - services
      - endpoints
      - pods
      - nodes/proxy
      - configmaps
      - get url=/metrics
    image: prom/prometheus:v2.3.1
    imagePullPolicy: IfNotPresent
    expose:
    - 9090/http
    configs:
    - prometheus-config:/etc/prometheus/prometheus.yml
    command:
    - --storage.tsdb.retention=6h
    - --config.file=/etc/prometheus/prometheus.yml
  grafana:
    environment:
    - GRAFANA_PORT=3000
    - GF_AUTH_BASIC_ENABLED=false
    - GF_AUTH_ANONYMOUS_ENABLED=true
    - GF_AUTH_ANONYMOUS_ORG_ROLE=admin
    - GF_PATHS_DATA=/data/grafana
    image: daishan1992/grafana:latest
    imagePullPolicy: always
    expose:
    - 3000/http
    configs:
    - grafana-dashboardproviders:/etc/grafana/provisioning/dashboards/dashboardproviders.yaml
    - grafana-datasources:/etc/grafana/provisioning/datasources/datasources.yaml
    volumes:
    - data:/data/grafana


questions:
- variable: LB_NAMESPACE
  description: "istio-system namespace"
